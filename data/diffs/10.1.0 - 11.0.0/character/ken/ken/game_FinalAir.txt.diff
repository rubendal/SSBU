diff --git "a/1.0/ken/game_FinalAir.txt" "b/0.0/ken/game_FinalAir.txt"
index cd08a59..ca3c7be 100644
--- "a/1.0/ken/game_FinalAir.txt"
+++ "b/0.0/ken/game_FinalAir.txt"
@@ -1,11 +1,11 @@
 frame(Frame=1)
 if(is_excute){
 	CHECK_VALID_FINAL_START_CAMERA(0, 0, 20, 0, 0, 0)
 	SLOW_OPPONENT(10, 70)
 }
-if(0x16e010(WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA), false, false)){
+if(0x16e060(WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA), false, false)){
 	frame(Frame=5)
 	if(is_excute){
 		FT_SET_FINAL_FEAR_FACE(40)
 		REQ_FINAL_START_CAMERA(hash40("d04final.nuanmb"), true)
 		FT_START_CUTIN()
@@ -13,22 +13,22 @@ if(0x16e010(WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_STAR
 	else{
 		if(is_excute){
 			FT_START_CUTIN()
 		}
 		get_value_float(SO_VAR_FLOAT_LR)
-		if(0x16e010(0, 0)){
+		if(0x16e060(0, 0)){
 			if(is_excute){
 				camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0)
 				PostureModule::scale(3, 0)
-				0x16e010(-929733165, 1.8)
+				0x16e060(-616000174, 1.8)
 				CAM_ZOOM_IN_arg5(0, 0)
 			}
 			else{
 				if(is_excute){
 					camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0)
 					PostureModule::scale(3, 0)
-					0x16e010(-929733165, 1.8)
+					0x16e060(-616000174, 1.8)
 					CAM_ZOOM_IN_arg5(0, 0)
 				}
 			}
 		}
 	}
@@ -41,20 +41,20 @@ if(is_excute){
 	AttackModule::set_no_dead_all(true, false)
 	AttackModule::set_no_uniq_effect_all(true, false)
 	AttackModule::set_damage_shake_scale(0.18)
 }
 PostureModule::scale(0)
-if(0x16e010(-929733165, 1.4)){
+if(0x16e060(-616000174, 1.4)){
 	if(is_excute){
 		as_hash__const(0, hash40("top"), 15, 3, 5)
 		AttackModule::set_vec_target_pos()
 		as_hash__const(1, hash40("top"), 15, 3, 5)
 		AttackModule::set_vec_target_pos()
 	}
 	else{
 		PostureModule::scale()
-		if(0x16e010(0, 0.5)){
+		if(0x16e060(0, 0.5)){
 			if(is_excute){
 				as_hash__const(0, hash40("top"), 15, 1, 3)
 				AttackModule::set_vec_target_pos()
 				as_hash__const(1, hash40("top"), 15, 1, 3)
 				AttackModule::set_vec_target_pos()
@@ -87,20 +87,20 @@ if(is_excute){
 	AttackModule::set_optional_hit_effect()
 	as_hash__const(1, 0x192e7100d1)
 	AttackModule::set_optional_hit_effect()
 }
 PostureModule::scale(0)
-if(0x16e010(-929733165, 1.4)){
+if(0x16e060(-616000174, 1.4)){
 	if(is_excute){
 		as_hash__const(0, hash40("top"), 15, 12, 15)
 		AttackModule::set_vec_target_pos()
 		as_hash__const(1, hash40("top"), 15, 9, 15)
 		AttackModule::set_vec_target_pos()
 	}
 	else{
 		PostureModule::scale()
-		if(0x16e010(0, 0.5)){
+		if(0x16e060(0, 0.5)){
 			if(is_excute){
 				as_hash__const(0, hash40("top"), 37, 14, 15)
 				AttackModule::set_vec_target_pos()
 				as_hash__const(1, hash40("top"), 35, 9, 15)
 				AttackModule::set_vec_target_pos()
@@ -129,20 +129,20 @@ if(is_excute){
 	AttackModule::set_optional_hit_effect()
 	as_hash__const(1, 0x192e7100d1)
 	AttackModule::set_optional_hit_effect()
 }
 PostureModule::scale(0)
-if(0x16e010(-929733165, 1.4)){
+if(0x16e060(-616000174, 1.4)){
 	if(is_excute){
 		as_hash__const(0, hash40("top"), 15, 12, 15)
 		AttackModule::set_vec_target_pos()
 		as_hash__const(1, hash40("top"), 15, 9, 15)
 		AttackModule::set_vec_target_pos()
 	}
 	else{
 		PostureModule::scale()
-		if(0x16e010(0, 0.5)){
+		if(0x16e060(0, 0.5)){
 			if(is_excute){
 				as_hash__const(0, hash40("top"), 37, 14, 15)
 				AttackModule::set_vec_target_pos()
 				as_hash__const(1, hash40("top"), 35, 9, 15)
 				AttackModule::set_vec_target_pos()
@@ -171,20 +171,20 @@ if(is_excute){
 	AttackModule::set_optional_hit_effect()
 	as_hash__const(1, 0x192e7100d1)
 	AttackModule::set_optional_hit_effect()
 }
 PostureModule::scale(0)
-if(0x16e010(-929733165, 1.4)){
+if(0x16e060(-616000174, 1.4)){
 	if(is_excute){
 		as_hash__const(0, hash40("top"), 15, 12, 15)
 		AttackModule::set_vec_target_pos()
 		as_hash__const(1, hash40("top"), 15, 9, 15)
 		AttackModule::set_vec_target_pos()
 	}
 	else{
 		PostureModule::scale()
-		if(0x16e010(0, 0.5)){
+		if(0x16e060(0, 0.5)){
 			if(is_excute){
 				as_hash__const(0, hash40("top"), 46, 14, 15)
 				AttackModule::set_vec_target_pos()
 				as_hash__const(1, hash40("top"), 46, 9, 15)
 				AttackModule::set_vec_target_pos()
@@ -213,20 +213,20 @@ if(is_excute){
 	AttackModule::set_optional_hit_effect()
 	as_hash__const(1, 0x192e7100d1)
 	AttackModule::set_optional_hit_effect()
 }
 PostureModule::scale(0)
-if(0x16e010(-929733165, 1.4)){
+if(0x16e060(-616000174, 1.4)){
 	if(is_excute){
 		as_hash__const(0, hash40("top"), 15, 12, 15)
 		AttackModule::set_vec_target_pos()
 		as_hash__const(1, hash40("top"), 15, 9, 15)
 		AttackModule::set_vec_target_pos()
 	}
 	else{
 		PostureModule::scale()
-		if(0x16e010(0, 0.5)){
+		if(0x16e060(0, 0.5)){
 			if(is_excute){
 				as_hash__const(0, hash40("top"), 52, 14, 15)
 				AttackModule::set_vec_target_pos()
 				as_hash__const(1, hash40("top"), 52, 10, 15)
 				AttackModule::set_vec_target_pos()
@@ -251,13 +251,14 @@ if(is_excute){
 	WorkModule::on_flag(Flag=FIGHTER_RYU_STATUS_WORK_ID_FINAL_FLAG_LOCK_ATTACK)
 	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=4.0, Angle=50, KBG=95, FKB=40, BKB=0, Size=11.0, X=0.0, Y=8.0, Z=8.0, X2=0.0, Y2=10.0, Z2=8.0, Hitlag=3.0, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KEN_FINAL01, Type=ATTACK_REGION_KICK)
 	AttackModule::set_no_dead_all(true, false)
 }
 PostureModule::scale(0)
-0x16e010(-929733165, 1.4)
-PostureModule::scale()
-0x16e010(0, 0.5)
+if(0x16e060(-616000174, 1.4)){
+	PostureModule::scale()
+	0x16e060(0, 0.5)
+}
 wait(Frames=1)
 if(is_excute){
 	AttackModule::clear_all()
 }
 if(is_excute){
